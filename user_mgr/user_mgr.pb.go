// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.3
// source: user_mgr.proto

package usermgr

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ELoginType 登录类型
type ELoginType int32

const (
	ELoginType_LoginWx ELoginType = 0 // 微信小程序登录方式
)

// Enum value maps for ELoginType.
var (
	ELoginType_name = map[int32]string{
		0: "LoginWx",
	}
	ELoginType_value = map[string]int32{
		"LoginWx": 0,
	}
)

func (x ELoginType) Enum() *ELoginType {
	p := new(ELoginType)
	*p = x
	return p
}

func (x ELoginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ELoginType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_mgr_proto_enumTypes[0].Descriptor()
}

func (ELoginType) Type() protoreflect.EnumType {
	return &file_user_mgr_proto_enumTypes[0]
}

func (x ELoginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ELoginType.Descriptor instead.
func (ELoginType) EnumDescriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{0}
}

type ELoginResult int32

const (
	ELoginResult_LoginSuccess         ELoginResult = 0   // 登录成功
	ELoginResult_LoginFailForExpired  ELoginResult = 1   // 登录态for登录态过期
	ELoginResult_LoginFailForNotExist ELoginResult = 2   // 登录失败for用户不存在
	ELoginResult_LoginFailForElse     ELoginResult = 100 // 登录失败for其他原因
)

// Enum value maps for ELoginResult.
var (
	ELoginResult_name = map[int32]string{
		0:   "LoginSuccess",
		1:   "LoginFailForExpired",
		2:   "LoginFailForNotExist",
		100: "LoginFailForElse",
	}
	ELoginResult_value = map[string]int32{
		"LoginSuccess":         0,
		"LoginFailForExpired":  1,
		"LoginFailForNotExist": 2,
		"LoginFailForElse":     100,
	}
)

func (x ELoginResult) Enum() *ELoginResult {
	p := new(ELoginResult)
	*p = x
	return p
}

func (x ELoginResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ELoginResult) Descriptor() protoreflect.EnumDescriptor {
	return file_user_mgr_proto_enumTypes[1].Descriptor()
}

func (ELoginResult) Type() protoreflect.EnumType {
	return &file_user_mgr_proto_enumTypes[1]
}

func (x ELoginResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ELoginResult.Descriptor instead.
func (ELoginResult) EnumDescriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{1}
}

// LoginInfo 用户登录相关信息
type LoginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginType   ELoginType `protobuf:"varint,1,opt,name=login_type,json=loginType,proto3,enum=usermgr.ELoginType" json:"login_type,omitempty"` // 登录类型
	OpenId      string     `protobuf:"bytes,2,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`                                   // 微信openid
	SessionKey  string     `protobuf:"bytes,3,opt,name=session_key,json=sessionKey,proto3" json:"session_key,omitempty"`                       // 微信session_key
	AccessToken string     `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`                    // 业务token
}

func (x *LoginInfo) Reset() {
	*x = LoginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginInfo) ProtoMessage() {}

func (x *LoginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginInfo.ProtoReflect.Descriptor instead.
func (*LoginInfo) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{0}
}

func (x *LoginInfo) GetLoginType() ELoginType {
	if x != nil {
		return x.LoginType
	}
	return ELoginType_LoginWx
}

func (x *LoginInfo) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *LoginInfo) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *LoginInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

// UserBasicInfo 用户基础信息
type UserBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick   string `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"`      // 昵称
	Head   string `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`      // 头像
	Gender int32  `protobuf:"varint,3,opt,name=gender,proto3" json:"gender,omitempty"` // 性别
	Email  string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`    // 邮件
	Iphone string `protobuf:"bytes,5,opt,name=iphone,proto3" json:"iphone,omitempty"`  // 电话
}

func (x *UserBasicInfo) Reset() {
	*x = UserBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBasicInfo) ProtoMessage() {}

func (x *UserBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBasicInfo.ProtoReflect.Descriptor instead.
func (*UserBasicInfo) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{1}
}

func (x *UserBasicInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *UserBasicInfo) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

func (x *UserBasicInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserBasicInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserBasicInfo) GetIphone() string {
	if x != nil {
		return x.Iphone
	}
	return ""
}

// UserInfo 用户信息
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户id  (login_type#login_id的base64编码)
	BasicInfo *UserBasicInfo `protobuf:"bytes,2,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"` // 用户基础信息
	LoginInfo *LoginInfo     `protobuf:"bytes,3,opt,name=login_info,json=loginInfo,proto3" json:"login_info,omitempty"` // 登录信息
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{2}
}

func (x *UserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfo) GetBasicInfo() *UserBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *UserInfo) GetLoginInfo() *LoginInfo {
	if x != nil {
		return x.LoginInfo
	}
	return nil
}

// UserRegisterReq 用户注册，wx小程序的话，用户是不需要注册的
type UserRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserRegisterReq) Reset() {
	*x = UserRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterReq) ProtoMessage() {}

func (x *UserRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterReq.ProtoReflect.Descriptor instead.
func (*UserRegisterReq) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{3}
}

type UserRegisterRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserRegisterRsp) Reset() {
	*x = UserRegisterRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterRsp) ProtoMessage() {}

func (x *UserRegisterRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterRsp.ProtoReflect.Descriptor instead.
func (*UserRegisterRsp) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{4}
}

// LoginCredential 登录凭证
type LoginCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginType ELoginType `protobuf:"varint,1,opt,name=login_type,json=loginType,proto3,enum=usermgr.ELoginType" json:"login_type,omitempty"` // 登录类型
	Code      string     `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                                                     // 登录码,wx小程序是jscode
}

func (x *LoginCredential) Reset() {
	*x = LoginCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginCredential) ProtoMessage() {}

func (x *LoginCredential) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginCredential.ProtoReflect.Descriptor instead.
func (*LoginCredential) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{5}
}

func (x *LoginCredential) GetLoginType() ELoginType {
	if x != nil {
		return x.LoginType
	}
	return ELoginType_LoginWx
}

func (x *LoginCredential) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type UserLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credential *LoginCredential `protobuf:"bytes,1,opt,name=credential,proto3" json:"credential,omitempty"` // 登录凭证
}

func (x *UserLoginReq) Reset() {
	*x = UserLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginReq) ProtoMessage() {}

func (x *UserLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginReq.ProtoReflect.Descriptor instead.
func (*UserLoginReq) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{6}
}

func (x *UserLoginReq) GetCredential() *LoginCredential {
	if x != nil {
		return x.Credential
	}
	return nil
}

type UserLoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32      `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	RetMsg  string     `protobuf:"bytes,2,opt,name=ret_msg,json=retMsg,proto3" json:"ret_msg,omitempty"`
	Info    *LoginInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"` // 登录信息
}

func (x *UserLoginRsp) Reset() {
	*x = UserLoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginRsp) ProtoMessage() {}

func (x *UserLoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginRsp.ProtoReflect.Descriptor instead.
func (*UserLoginRsp) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{7}
}

func (x *UserLoginRsp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *UserLoginRsp) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *UserLoginRsp) GetInfo() *LoginInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// CheckLoginReq 登录态校验
type CheckLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // 用户id
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // 登录token
}

func (x *CheckLoginReq) Reset() {
	*x = CheckLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLoginReq) ProtoMessage() {}

func (x *CheckLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLoginReq.ProtoReflect.Descriptor instead.
func (*CheckLoginReq) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{8}
}

func (x *CheckLoginReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckLoginReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type CheckLoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32        `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	RetMsg  string       `protobuf:"bytes,2,opt,name=ret_msg,json=retMsg,proto3" json:"ret_msg,omitempty"`
	Result  ELoginResult `protobuf:"varint,3,opt,name=result,proto3,enum=usermgr.ELoginResult" json:"result,omitempty"` // 登录结果
}

func (x *CheckLoginRsp) Reset() {
	*x = CheckLoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLoginRsp) ProtoMessage() {}

func (x *CheckLoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLoginRsp.ProtoReflect.Descriptor instead.
func (*CheckLoginRsp) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{9}
}

func (x *CheckLoginRsp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *CheckLoginRsp) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *CheckLoginRsp) GetResult() ELoginResult {
	if x != nil {
		return x.Result
	}
	return ELoginResult_LoginSuccess
}

type RefreshLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // 用户id
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // 登录token
}

func (x *RefreshLoginReq) Reset() {
	*x = RefreshLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshLoginReq) ProtoMessage() {}

func (x *RefreshLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshLoginReq.ProtoReflect.Descriptor instead.
func (*RefreshLoginReq) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{10}
}

func (x *RefreshLoginReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RefreshLoginReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type RefreshLoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32      `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	RetMsg  string     `protobuf:"bytes,2,opt,name=ret_msg,json=retMsg,proto3" json:"ret_msg,omitempty"`
	Info    *LoginInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"` // 登录信息
}

func (x *RefreshLoginRsp) Reset() {
	*x = RefreshLoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_mgr_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshLoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshLoginRsp) ProtoMessage() {}

func (x *RefreshLoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_mgr_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshLoginRsp.ProtoReflect.Descriptor instead.
func (*RefreshLoginRsp) Descriptor() ([]byte, []int) {
	return file_user_mgr_proto_rawDescGZIP(), []int{11}
}

func (x *RefreshLoginRsp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RefreshLoginRsp) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RefreshLoginRsp) GetInfo() *LoginInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_user_mgr_proto protoreflect.FileDescriptor

var file_user_mgr_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x67, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x6d, 0x67, 0x72, 0x2e, 0x45, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7d, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x59, 0x0a, 0x0f, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x32,
	0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x45, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x48, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x6d, 0x67, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x22, 0x6a, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x74, 0x4d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x0d,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x72, 0x0a, 0x0d, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x5f, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x2d,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x45, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a,
	0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6d, 0x0a, 0x0f,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x2a, 0x19, 0x0a, 0x0a, 0x45,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x57, 0x78, 0x10, 0x00, 0x2a, 0x69, 0x0a, 0x0c, 0x45, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x46, 0x61, 0x69, 0x6c, 0x46, 0x6f, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x46, 0x6f,
	0x72, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x46, 0x6f, 0x72, 0x45, 0x6c, 0x73, 0x65, 0x10,
	0x64, 0x32, 0x99, 0x03, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x67, 0x72, 0x48, 0x74, 0x74,
	0x70, 0x12, 0x66, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x67, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x5a, 0x0a, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x73, 0x70, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6d, 0x67, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x5e, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x73, 0x70, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6d, 0x67, 0x72, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x22, 0x17, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x67, 0x72, 0x2f, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x42, 0x2f, 0x5a,
	0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6b, 0x61, 0x74,
	0x73, 0x75, 0x6b, 0x69, 0x73, 0x75, 0x6e, 0x32, 0x30, 0x32, 0x30, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x67, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_mgr_proto_rawDescOnce sync.Once
	file_user_mgr_proto_rawDescData = file_user_mgr_proto_rawDesc
)

func file_user_mgr_proto_rawDescGZIP() []byte {
	file_user_mgr_proto_rawDescOnce.Do(func() {
		file_user_mgr_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_mgr_proto_rawDescData)
	})
	return file_user_mgr_proto_rawDescData
}

var file_user_mgr_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_user_mgr_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_user_mgr_proto_goTypes = []interface{}{
	(ELoginType)(0),         // 0: usermgr.ELoginType
	(ELoginResult)(0),       // 1: usermgr.ELoginResult
	(*LoginInfo)(nil),       // 2: usermgr.LoginInfo
	(*UserBasicInfo)(nil),   // 3: usermgr.UserBasicInfo
	(*UserInfo)(nil),        // 4: usermgr.UserInfo
	(*UserRegisterReq)(nil), // 5: usermgr.UserRegisterReq
	(*UserRegisterRsp)(nil), // 6: usermgr.UserRegisterRsp
	(*LoginCredential)(nil), // 7: usermgr.LoginCredential
	(*UserLoginReq)(nil),    // 8: usermgr.UserLoginReq
	(*UserLoginRsp)(nil),    // 9: usermgr.UserLoginRsp
	(*CheckLoginReq)(nil),   // 10: usermgr.CheckLoginReq
	(*CheckLoginRsp)(nil),   // 11: usermgr.CheckLoginRsp
	(*RefreshLoginReq)(nil), // 12: usermgr.RefreshLoginReq
	(*RefreshLoginRsp)(nil), // 13: usermgr.RefreshLoginRsp
}
var file_user_mgr_proto_depIdxs = []int32{
	0,  // 0: usermgr.LoginInfo.login_type:type_name -> usermgr.ELoginType
	3,  // 1: usermgr.UserInfo.basic_info:type_name -> usermgr.UserBasicInfo
	2,  // 2: usermgr.UserInfo.login_info:type_name -> usermgr.LoginInfo
	0,  // 3: usermgr.LoginCredential.login_type:type_name -> usermgr.ELoginType
	7,  // 4: usermgr.UserLoginReq.credential:type_name -> usermgr.LoginCredential
	2,  // 5: usermgr.UserLoginRsp.info:type_name -> usermgr.LoginInfo
	1,  // 6: usermgr.CheckLoginRsp.result:type_name -> usermgr.ELoginResult
	2,  // 7: usermgr.RefreshLoginRsp.info:type_name -> usermgr.LoginInfo
	5,  // 8: usermgr.UserMgrHttp.UserRegister:input_type -> usermgr.UserRegisterReq
	8,  // 9: usermgr.UserMgrHttp.UserLogin:input_type -> usermgr.UserLoginReq
	10, // 10: usermgr.UserMgrHttp.CheckLogin:input_type -> usermgr.CheckLoginReq
	12, // 11: usermgr.UserMgrHttp.RefreshLogin:input_type -> usermgr.RefreshLoginReq
	6,  // 12: usermgr.UserMgrHttp.UserRegister:output_type -> usermgr.UserRegisterRsp
	9,  // 13: usermgr.UserMgrHttp.UserLogin:output_type -> usermgr.UserLoginRsp
	11, // 14: usermgr.UserMgrHttp.CheckLogin:output_type -> usermgr.CheckLoginRsp
	13, // 15: usermgr.UserMgrHttp.RefreshLogin:output_type -> usermgr.RefreshLoginRsp
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_user_mgr_proto_init() }
func file_user_mgr_proto_init() {
	if File_user_mgr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_mgr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_mgr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_mgr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_mgr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_mgr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_mgr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_mgr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_mgr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_mgr_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_mgr_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_mgr_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_mgr_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshLoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_mgr_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_mgr_proto_goTypes,
		DependencyIndexes: file_user_mgr_proto_depIdxs,
		EnumInfos:         file_user_mgr_proto_enumTypes,
		MessageInfos:      file_user_mgr_proto_msgTypes,
	}.Build()
	File_user_mgr_proto = out.File
	file_user_mgr_proto_rawDesc = nil
	file_user_mgr_proto_goTypes = nil
	file_user_mgr_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserMgrHttpClient is the client API for UserMgrHttp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserMgrHttpClient interface {
	// UserRegister 用户注册接口(TODO:以后在实现)
	UserRegister(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*UserRegisterRsp, error)
	// UserLogin 用户登录
	UserLogin(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginRsp, error)
	// CheckLogin 校验登录
	CheckLogin(ctx context.Context, in *CheckLoginReq, opts ...grpc.CallOption) (*CheckLoginRsp, error)
	// RefreshLogin 刷新登录
	RefreshLogin(ctx context.Context, in *RefreshLoginReq, opts ...grpc.CallOption) (*RefreshLoginRsp, error)
}

type userMgrHttpClient struct {
	cc grpc.ClientConnInterface
}

func NewUserMgrHttpClient(cc grpc.ClientConnInterface) UserMgrHttpClient {
	return &userMgrHttpClient{cc}
}

func (c *userMgrHttpClient) UserRegister(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*UserRegisterRsp, error) {
	out := new(UserRegisterRsp)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgrHttp/UserRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrHttpClient) UserLogin(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginRsp, error) {
	out := new(UserLoginRsp)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgrHttp/UserLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrHttpClient) CheckLogin(ctx context.Context, in *CheckLoginReq, opts ...grpc.CallOption) (*CheckLoginRsp, error) {
	out := new(CheckLoginRsp)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgrHttp/CheckLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrHttpClient) RefreshLogin(ctx context.Context, in *RefreshLoginReq, opts ...grpc.CallOption) (*RefreshLoginRsp, error) {
	out := new(RefreshLoginRsp)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgrHttp/RefreshLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserMgrHttpServer is the server API for UserMgrHttp service.
type UserMgrHttpServer interface {
	// UserRegister 用户注册接口(TODO:以后在实现)
	UserRegister(context.Context, *UserRegisterReq) (*UserRegisterRsp, error)
	// UserLogin 用户登录
	UserLogin(context.Context, *UserLoginReq) (*UserLoginRsp, error)
	// CheckLogin 校验登录
	CheckLogin(context.Context, *CheckLoginReq) (*CheckLoginRsp, error)
	// RefreshLogin 刷新登录
	RefreshLogin(context.Context, *RefreshLoginReq) (*RefreshLoginRsp, error)
}

// UnimplementedUserMgrHttpServer can be embedded to have forward compatible implementations.
type UnimplementedUserMgrHttpServer struct {
}

func (*UnimplementedUserMgrHttpServer) UserRegister(context.Context, *UserRegisterReq) (*UserRegisterRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRegister not implemented")
}
func (*UnimplementedUserMgrHttpServer) UserLogin(context.Context, *UserLoginReq) (*UserLoginRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserLogin not implemented")
}
func (*UnimplementedUserMgrHttpServer) CheckLogin(context.Context, *CheckLoginReq) (*CheckLoginRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckLogin not implemented")
}
func (*UnimplementedUserMgrHttpServer) RefreshLogin(context.Context, *RefreshLoginReq) (*RefreshLoginRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshLogin not implemented")
}

func RegisterUserMgrHttpServer(s *grpc.Server, srv UserMgrHttpServer) {
	s.RegisterService(&_UserMgrHttp_serviceDesc, srv)
}

func _UserMgrHttp_UserRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrHttpServer).UserRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgrHttp/UserRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrHttpServer).UserRegister(ctx, req.(*UserRegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgrHttp_UserLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrHttpServer).UserLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgrHttp/UserLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrHttpServer).UserLogin(ctx, req.(*UserLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgrHttp_CheckLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrHttpServer).CheckLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgrHttp/CheckLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrHttpServer).CheckLogin(ctx, req.(*CheckLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgrHttp_RefreshLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrHttpServer).RefreshLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgrHttp/RefreshLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrHttpServer).RefreshLogin(ctx, req.(*RefreshLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserMgrHttp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "usermgr.UserMgrHttp",
	HandlerType: (*UserMgrHttpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserRegister",
			Handler:    _UserMgrHttp_UserRegister_Handler,
		},
		{
			MethodName: "UserLogin",
			Handler:    _UserMgrHttp_UserLogin_Handler,
		},
		{
			MethodName: "CheckLogin",
			Handler:    _UserMgrHttp_CheckLogin_Handler,
		},
		{
			MethodName: "RefreshLogin",
			Handler:    _UserMgrHttp_RefreshLogin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_mgr.proto",
}
